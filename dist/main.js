/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_title_splash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/title_splash */ \"./src/scripts/title_splash.js\");\n/* harmony import */ var _scripts_main_content__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/main-content */ \"./src/scripts/main-content.js\");\n// import Fetcher from \"./scripts/fetcher\";\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const title = document.getElementById(\"title\");\n  new _scripts_title_splash__WEBPACK_IMPORTED_MODULE_0__[\"default\"](title);\n  const main = document.getElementById(\"main-content\");\n  new _scripts_main_content__WEBPACK_IMPORTED_MODULE_1__[\"default\"](main);\n});\n\n// console.log(\"Hello World\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDaUQ7QUFDQTtBQUVqREUsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBQ2xELE1BQU1DLEtBQUssR0FBR0YsUUFBUSxDQUFDRyxjQUFjLENBQUMsT0FBTyxDQUFDO0VBQzlDLElBQUlMLDZEQUFXLENBQUNJLEtBQUssQ0FBQztFQUN0QixNQUFNRSxJQUFJLEdBQUdKLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLGNBQWMsQ0FBQztFQUNwRCxJQUFJSiw2REFBVyxDQUFDSyxJQUFJLENBQUM7QUFDdkIsQ0FBQyxDQUFDOztBQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9wdWxhdGlvbi10cmFja2VyLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEZldGNoZXIgZnJvbSBcIi4vc2NyaXB0cy9mZXRjaGVyXCI7XG5pbXBvcnQgVGl0bGVTcGxhc2ggZnJvbSBcIi4vc2NyaXB0cy90aXRsZV9zcGxhc2hcIjtcbmltcG9ydCBNYWluQ29udGVudCBmcm9tIFwiLi9zY3JpcHRzL21haW4tY29udGVudFwiO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aXRsZVwiKTtcbiAgbmV3IFRpdGxlU3BsYXNoKHRpdGxlKTtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpbi1jb250ZW50XCIpO1xuICBuZXcgTWFpbkNvbnRlbnQobWFpbik7XG59KTtcblxuLy8gY29uc29sZS5sb2coXCJIZWxsbyBXb3JsZFwiKTtcbiJdLCJuYW1lcyI6WyJUaXRsZVNwbGFzaCIsIk1haW5Db250ZW50IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwidGl0bGUiLCJnZXRFbGVtZW50QnlJZCIsIm1haW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/main-content.js":
/*!*************************************!*\
  !*** ./src/scripts/main-content.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass MainContent {\n  constructor(ele) {\n    this.ele = ele;\n    this.sortStyle = \"byName\";\n    let firstLine = document.createElement(\"div\");\n    firstLine.setAttribute(\"id\", \"firstLine\");\n    this.ele.appendChild(firstLine);\n    let div = document.createElement(\"div\");\n    div.setAttribute(\"id\", \"firstLineFooter\");\n    this.ele.appendChild(div);\n    let firstLineFooterH2 = document.createElement(\"h2\");\n    firstLineFooterH2.setAttribute(\"id\", \"firstLineFooterH2\");\n    firstLineFooterH2.innerText = \"\";\n    div.appendChild(firstLineFooterH2);\n    let h2 = document.createElement(\"h2\");\n    h2.innerText = \"Fetch Vintage:\";\n    firstLine.appendChild(h2);\n    div = document.createElement(\"div\");\n    div.setAttribute(\"id\", \"vintageSelector\");\n    div.classList.add(\"firstLine\");\n    let ul = document.createElement(\"ul\");\n    ul.classList.add(\"vintageUl\");\n    firstLine.appendChild(div);\n    div.appendChild(ul);\n    let li = document.createElement(\"li\");\n    li.innerText = \"2020\";\n    li.classList.add(\"2020\");\n    ul.appendChild(li);\n    li = document.createElement(\"li\");\n    li.innerText = \"2010\";\n    li.classList.add(\"2010\");\n    ul.appendChild(li);\n    li = document.createElement(\"li\");\n    li.innerText = \"2000\";\n    li.classList.add(\"2000\");\n    ul.appendChild(li);\n    let secondLine = document.createElement(\"div\");\n    secondLine.setAttribute(\"id\", \"secondLine\");\n    ele.appendChild(secondLine);\n    ul = document.createElement(\"ul\");\n    ul.classList.add(\"sortSelectorUl\");\n    secondLine.appendChild(ul);\n    this.ele.appendChild(secondLine);\n    let thirdLine = document.createElement(\"div\");\n    thirdLine.setAttribute(\"id\", \"thirdLine\");\n    this.ele.appendChild(thirdLine);\n    let boundFetch2020 = this.fetch2020.bind(this);\n    let boundFetch2010 = this.fetch2010.bind(this);\n    let boundFetch2000 = this.fetch2000.bind(this);\n    let boundSortByName = this.sortByName.bind(this);\n    let boundSortByPopulation = this.sortByPopulation.bind(this);\n    document.addEventListener(\"click\", function (e) {\n      let eventTarget = e.target;\n      if (eventTarget.classList.contains(\"2020\")) {\n        // debugger;\n        boundFetch2020();\n      } else if (eventTarget.classList.contains(\"2010\")) {\n        boundFetch2010();\n      } else if (eventTarget.classList.contains(\"2000\")) {\n        boundFetch2000();\n      } else if (eventTarget.classList.contains(\"sortByName\")) {\n        boundSortByName();\n      } else if (eventTarget.classList.contains(\"sortByPopulation\")) {\n        boundSortByPopulation();\n      }\n    });\n  }\n  fetch2020() {\n    let firstLineFooterH2 = document.getElementById(\"firstLineFooterH2\");\n    firstLineFooterH2.innerText = \"fetching...\";\n    this.getData(\"2020\");\n  }\n  fetch2010() {\n    let firstLineFooterH2 = document.getElementById(\"firstLineFooterH2\");\n    firstLineFooterH2.innerText = \"fetching...\";\n    this.getData(\"2010\");\n  }\n  fetch2000() {\n    let firstLineFooterH2 = document.getElementById(\"firstLineFooterH2\");\n    firstLineFooterH2.innerText = \"fetching...\";\n    this.getData(\"2000\");\n  }\n  printData() {\n    if (!document.querySelector(\"data\")) {\n      let dataEl = document.createElement(\"data\");\n      let dataUl = document.createElement(\"ul\");\n      dataUl.classList.add(\"fetchResultSorted\");\n      dataEl.appendChild(dataUl);\n      let thirdLine = document.getElementById(\"thirdLine\");\n      thirdLine.appendChild(dataEl);\n    }\n    let firstLineFooterH2 = document.getElementById(\"firstLineFooterH2\");\n    firstLineFooterH2.innerText = \"data fetched!\";\n    let ul = document.createElement(\"ul\");\n    let li = document.createElement(\"li\");\n    li.classList.add(\"sortByName\");\n    li.innerText = \"Sort by Name\";\n    ul.appendChild(li);\n    li = document.createElement(\"li\");\n    li.classList.add(\"sortByPopulation\");\n    li.innerText = \"Sort by Population\";\n    ul.appendChild(li);\n    let selectorDiv = document.getElementById(\"secondLine\");\n    selectorDiv.replaceChild(ul, document.querySelector(\".sortSelectorUl\"));\n    ul.classList.add(\"sortSelectorUl\");\n  }\n  loadLocalData(vintage) {\n    let dataBlock;\n    if (vintage === \"2020\") {\n      // debugger;\n      dataBlock = __webpack_require__(/*! ../../../../assets/territories-2020.json */ \"./assets/territories-2020.json\");\n    } else if (vintage === \"2010\") {\n      dataBlock = __webpack_require__(/*! ../../../../assets/territories-2010.json */ \"./assets/territories-2010.json\");\n    } else if (vintage === \"2000\") {\n      dataBlock = __webpack_require__(/*! ../../../../assets/territories-2000.json */ \"./assets/territories-2000.json\");\n    }\n    // debugger;\n    this.dataObject.localData = dataBlock;\n    // debugger;\n  }\n\n  getData(vintage) {\n    let dataBlock;\n    let dataTitle;\n    let url;\n    if (vintage === \"2020\") {\n      // debugger;\n      url = \"https://api.census.gov/data/2020/dec/pl?get=NAME,P1_001N&for=state:*&key=09beac347deddc9da12be4ca736c435f707ebec2\";\n      // dataBlock = require(\"/assets/census-2020-P1001N.json\");\n      dataTitle = \"2020 Census dataset\";\n    } else if (vintage === \"2010\") {\n      // dataBlock = require(\"/assets/census-2010-P1001N.json\");\n      url = \"https://api.census.gov/data/2010/dec/pl?get=NAME,P001001&for=state:*&key=09beac347deddc9da12be4ca736c435f707ebec2\";\n      dataTitle = \"2010 Census dataset\";\n    } else if (vintage === \"2000\") {\n      url = \"https://api.census.gov/data/2000/dec/sf1?get=NAME,P001001&for=state:*&key=09beac347deddc9da12be4ca736c435f707ebec2\";\n      // dataBlock = require(\"/assets/census-2000-P1001N.json\");\n      dataTitle = \"2000 Census dataset\";\n    }\n    const request = new XMLHttpRequest();\n    request.addEventListener(\"readystatechange\", () => {\n      if (request.readyState === 4 && request.status === 200) {\n        dataBlock = JSON.parse(request.responseText);\n        this.dataObject = {\n          header: dataTitle,\n          data: dataBlock\n          // localData ?\n        };\n        // debugger;\n        this.loadLocalData(vintage);\n        this.printData();\n        if (this.sortStyle === \"byName\") {\n          this.sortByName();\n        } else if (this.sortStyle === \"byPop\") {\n          this.sortByPopulation();\n        }\n      }\n    });\n    request.open(\"GET\", url);\n    request.send();\n  }\n  sortData(sortKey) {\n    const preSorted = {};\n    preSorted.header = this.dataObject.header;\n    preSorted.states = [];\n    // debugger;\n    this.dataObject.data.forEach(row => {\n      if (row[0] !== \"NAME\") {\n        let newState = {};\n        // newState.stateId = row[2];\n        newState.stateName = row[0];\n        newState.population = row[1];\n        preSorted.states.push(newState);\n      }\n    });\n    // preSorted has been populated by fetched data via this.dataObject.data\n    // add local data to preSorted\n\n    this.dataObject.localData.forEach(row => {\n      let newEntry = {};\n      newEntry.stateName = row[0];\n      newEntry.population = row[1];\n      preSorted.states.push(newEntry);\n    });\n    let sorted = {};\n    if (sortKey === \"byName\") {\n      sorted.states = this.objSortByName(preSorted.states);\n      sorted.header = this.dataObject.header;\n    } else if (sortKey === \"byPopulation\") {\n      sorted.states = this.objSortByPopulation(preSorted.states);\n      sorted.header = this.dataObject.header;\n    }\n\n    // sorted.states needs to have territories and totals by this point\n\n    for (let i = 0; i < sorted.states.length; i++) {\n      let popSource = sorted.states[i].population;\n      if (typeof popSource === \"number\") {\n        popSource = parseInt(popSource);\n      }\n      let arrayedPop = popSource.split(\"\");\n      let count = 0;\n      let commaPop = [];\n      while (arrayedPop.length > 0) {\n        if (count === 3) {\n          commaPop.push(\",\");\n          count = 0;\n        }\n        commaPop.push(arrayedPop.pop());\n        count++;\n      }\n      let resultPop = commaPop.reverse().join(\"\");\n      sorted.states[i].population = resultPop;\n    }\n    return sorted;\n  }\n  objSortByName(obj) {\n    let sorted = obj.sort((a, b) => {\n      if (a.stateName < b.stateName) return -1;\n      if (a.stateName > b.stateName) return 1;\n      return 0;\n    });\n    return sorted;\n  }\n  objSortByPopulation(obj) {\n    let sorted = obj.sort((b, a) => {\n      if (parseInt(a.population) < parseInt(b.population)) return -1;\n      if (parseInt(a.population) > parseInt(b.population)) return 1;\n      return 0;\n    });\n    return sorted;\n  }\n  sortByName() {\n    this.sortStyle = \"byName\";\n    let dataObject = this.sortData(\"byName\");\n    let dataHeader = dataObject.header;\n    let dataEl = document.querySelector(\"data\");\n    let ul = document.createElement(\"ul\");\n    dataEl.replaceChild(ul, document.querySelector(\".fetchResultSorted\"));\n    ul.classList.add(\"fetchResultSorted\");\n    let fiftyPlusDCName;\n    let fiftyPlusDCPop;\n    let totalUSName;\n    let totalUSPop;\n    for (let i = 0; i < dataObject.states.length; i++) {\n      // debugger;\n      if (i === 0) {\n        let vintageLabel = document.createElement(\"li\");\n        vintageLabel.innerText = dataHeader;\n        vintageLabel.classList.add(\"data-header\");\n        ul.appendChild(vintageLabel);\n        let sortLabel = document.createElement(\"li\");\n        sortLabel.innerText = \"by name\";\n        sortLabel.classList = \"sortLabel\";\n        ul.appendChild(sortLabel);\n        let keyState = document.createElement(\"li\");\n        keyState.classList.add(\"keyState\");\n        keyState.innerText = \"State\";\n        ul.appendChild(keyState);\n        let keyPop = document.createElement(\"li\");\n        keyPop.classList.add(\"keyPop\");\n        keyPop.innerText = \"Population\";\n        ul.appendChild(keyPop);\n      }\n      if (dataObject.states[i].stateName !== \"50 states + DC\" && dataObject.states[i].stateName !== \"Total U.S. population\") {\n        let stateName = document.createElement(\"li\");\n        stateName.classList.add(\"item\", \"itemName\");\n        stateName.innerText = `${dataObject.states[i].stateName}`;\n        ul.appendChild(stateName);\n        let statePop = document.createElement(\"li\");\n        statePop.classList.add(\"item\", \"itemPop\");\n        statePop.innerText = `${dataObject.states[i].population}`;\n        ul.appendChild(statePop);\n      } else if (dataObject.states[i].stateName === \"50 states + DC\") {\n        // debugger;\n        fiftyPlusDCName = document.createElement(\"li\");\n        fiftyPlusDCName.classList.add(\"item\", \"itemName\", \"listSubFooter\");\n        fiftyPlusDCName.innerText = `${dataObject.states[i].stateName}`;\n        fiftyPlusDCPop = document.createElement(\"li\");\n        fiftyPlusDCPop.classList.add(\"item\", \"itemPop\", \"listSubFooter\");\n        fiftyPlusDCPop.innerText = `${dataObject.states[i].population}`;\n        // fiftyPlusDC = dataObject.states[i].stateName;\n      } else if (dataObject.states[i].stateName === \"Total U.S. population\") {\n        // debugger;\n        totalUSName = document.createElement(\"li\");\n        totalUSName.classList.add(\"item\", \"itemName\", \"listFooter\");\n        totalUSName.innerText = `${dataObject.states[i].stateName}`;\n        totalUSPop = document.createElement(\"li\");\n        totalUSPop.classList.add(\"item\", \"itemPop\", \"listFooter\");\n        totalUSPop.innerText = `${dataObject.states[i].population}`;\n      }\n    } // add territories\n    ul.appendChild(fiftyPlusDCName);\n    ul.appendChild(fiftyPlusDCPop);\n    ul.appendChild(totalUSName);\n    ul.appendChild(totalUSPop);\n  }\n\n  // addTerritories() {\n  //   this.territories;\n  // }\n\n  sortByPopulation() {\n    this.sortStyle = \"byPop\";\n    let dataObject = this.sortData(\"byPopulation\");\n    let dataHeader = dataObject.header;\n    let dataEl = document.querySelector(\"data\");\n    let ul = document.createElement(\"ul\");\n    dataEl.replaceChild(ul, document.querySelector(\".fetchResultSorted\"));\n    ul.classList.add(\"fetchResultSorted\");\n    let fiftyPlusDC;\n    let totalUSPop;\n    for (let i = 0; i < dataObject.states.length; i++) {\n      // debugger;\n      if (i === 0) {\n        let vintageLabel = document.createElement(\"li\");\n        vintageLabel.innerText = dataHeader;\n        vintageLabel.classList.add(\"data-header\");\n        ul.appendChild(vintageLabel);\n        let sortLabel = document.createElement(\"li\");\n        sortLabel.innerText = \"by population\";\n        sortLabel.classList = \"sortLabel\";\n        ul.appendChild(sortLabel);\n        let keyState = document.createElement(\"li\");\n        keyState.classList.add(\"keyState\");\n        keyState.innerText = \"State\";\n        ul.appendChild(keyState);\n        let keyPop = document.createElement(\"li\");\n        keyPop.classList.add(\"keyPop\");\n        keyPop.innerText = \"Population\";\n        ul.appendChild(keyPop);\n      }\n      if (dataObject.states[i].stateName !== \"50 states + DC\" && dataObject.states[i].stateName !== \"Total U.S. population\") {\n        // debugger;\n        let stateName = document.createElement(\"li\");\n        stateName.classList.add(\"item\", \"itemName\");\n        stateName.innerText = `${dataObject.states[i].stateName}`;\n        ul.appendChild(stateName);\n        let statePop = document.createElement(\"li\");\n        statePop.classList.add(\"item\", \"itemPop\");\n        statePop.innerText = `${dataObject.states[i].population}`;\n        ul.appendChild(statePop);\n      } else if (dataObject.states[i].stateName === \"50 states + DC\") {\n        fiftyPlusDC = document.createElement(\"li\");\n        fiftyPlusDC.classList.add(\"item\", \"itemName\", \"listSubFooter\");\n        fiftyPlusDC.innerText = `${dataObject.states[i].stateName}`;\n      } else if (dataObject.states[i].stateName === \"Total U.S. population\") {\n        totalUSPop = document.createElement(\"li\");\n        totalUSPop.classList.add(\"item\", \"itemPop\", \"listFooter\");\n        totalUSPop.innerText = `${dataObject.states[i].population}`;\n      }\n    }\n    ul.appendChild(fiftyPlusDC);\n    ul.appendChild(totalUSPop);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MainContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/main-content.js\n");

/***/ }),

/***/ "./src/scripts/title_splash.js":
/*!*************************************!*\
  !*** ./src/scripts/title_splash.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass TitleSplash {\n  constructor(ele) {\n    this.ele = ele;\n    this.ele.innerHTML = \"<h1>Population Tracker</h1>\";\n    this.ele.addEventListener(\"click\", this.handleClick.bind(this));\n  }\n  handleClick() {\n    this.ele.children[0].innerText = \"...pOpUlAtIoN tRaCkEr...\";\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (TitleSplash);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aXRsZV9zcGxhc2guanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFdBQVcsQ0FBQztFQUNoQkMsV0FBVyxDQUFDQyxHQUFHLEVBQUU7SUFDZixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0EsR0FBRyxDQUFDQyxTQUFTLEdBQUcsNkJBQTZCO0lBRWxELElBQUksQ0FBQ0QsR0FBRyxDQUFDRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDQyxXQUFXLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUNqRTtFQUVBRCxXQUFXLEdBQUc7SUFDWixJQUFJLENBQUNILEdBQUcsQ0FBQ0ssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDQyxTQUFTLEdBQUcsMEJBQTBCO0VBQzdEO0FBQ0Y7QUFFQSwrREFBZVIsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcHVsYXRpb24tdHJhY2tlci8uL3NyYy9zY3JpcHRzL3RpdGxlX3NwbGFzaC5qcz9mYTg1Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFRpdGxlU3BsYXNoIHtcbiAgY29uc3RydWN0b3IoZWxlKSB7XG4gICAgdGhpcy5lbGUgPSBlbGU7XG4gICAgdGhpcy5lbGUuaW5uZXJIVE1MID0gXCI8aDE+UG9wdWxhdGlvbiBUcmFja2VyPC9oMT5cIjtcblxuICAgIHRoaXMuZWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcykpO1xuICB9XG5cbiAgaGFuZGxlQ2xpY2soKSB7XG4gICAgdGhpcy5lbGUuY2hpbGRyZW5bMF0uaW5uZXJUZXh0ID0gXCIuLi5wT3BVbEF0SW9OIHRSYUNrRXIuLi5cIjtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaXRsZVNwbGFzaDtcbiJdLCJuYW1lcyI6WyJUaXRsZVNwbGFzaCIsImNvbnN0cnVjdG9yIiwiZWxlIiwiaW5uZXJIVE1MIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUNsaWNrIiwiYmluZCIsImNoaWxkcmVuIiwiaW5uZXJUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/title_splash.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3B1bGF0aW9uLXRyYWNrZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./assets/territories-2000.json":
/*!**************************************!*\
  !*** ./assets/territories-2000.json ***!
  \**************************************/
/***/ (function(module) {

module.exports = JSON.parse('[["Puerto Rico","3808610"],["Guam","154805"],["U.S. Virgin Islands","108612"],["American Samoa","57291"],["Northern Mariana Islands","69221"],["50 states + DC","281421906"],["Total U.S. population","285620761"]]');

/***/ }),

/***/ "./assets/territories-2010.json":
/*!**************************************!*\
  !*** ./assets/territories-2010.json ***!
  \**************************************/
/***/ (function(module) {

module.exports = JSON.parse('[["Puerto Rico","4100954"],["Guam","153836"],["U.S. Virgin Islands","87146"],["American Samoa","49710"],["Northern Mariana Islands","53883"],["50 states + DC","308745538"],["Total U.S. population","312846492"]]');

/***/ }),

/***/ "./assets/territories-2020.json":
/*!**************************************!*\
  !*** ./assets/territories-2020.json ***!
  \**************************************/
/***/ (function(module) {

module.exports = JSON.parse('[["Puerto Rico","3285874"],["Guam","159358"],["U.S. Virgin Islands","106405"],["American Samoa","55519"],["Northern Mariana Islands","47329"],["50 states + DC","331449281"],["Total U.S. population","335073176"]]');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;